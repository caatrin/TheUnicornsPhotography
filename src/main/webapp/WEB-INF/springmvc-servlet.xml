<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:component-scan base-package="ea.photography" />
    
    <mvc:annotation-driven />
    <mvc:annotation-driven validator="validator"/>
    
    <mvc:view-controller path="/index" view-name="index"/>
    <mvc:view-controller path="/login" view-name="login"/>    
        
    <!-- Lets us find resources (.html etc) through the default servlet -->
    <mvc:default-servlet-handler/> 
	

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
    up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/img/**" location="/resources/img/" />
        
    <!-- import security config -->
    <import resource="springsecurity.xml" />
    
    <bean id="userService" class="ea.photography.service.UserService" >
        <property name="userDao" ref="userDao" />
    </bean>
    <bean id="commentService" class="ea.photography.service.CommentService" >
        <property name="commentDao" ref="commentDao" />
    </bean>	
    <bean id = "postService" class="ea.photography.service.PostService">
        <property name="postDao" ref="postDao" />
    </bean>

    <bean id="postDao"  class="ea.photography.dao.PostDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="userDao" class="ea.photography.dao.UserDao" >
        <property name= "sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="commentDao" class="ea.photography.dao.CommentDao" >
        <property name= "sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
    in the /WEB-INF/views directory -->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- needed for security tag lib expression support -->
    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" /> 
        
    <bean id="dataSource" 
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/photography" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean>
    <bean id="sessionFactory" 
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
 
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties" ref="hibernateProperties" />
        <property name="annotatedClasses">
            <list>
                <value>ea.photography.domain.User</value>
                <value>ea.photography.domain.Post</value>
                <value>ea.photography.domain.Comment</value>
            </list>
        </property>
    </bean>
    
    <bean id="hibernateProperties" 
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <!--<prop key="hibernate.hbm2ddl.auto" >create</prop> -->
                <prop key="hibernate.hbm2ddl.auto" >update</prop> 
                <prop key="hibernate.dialect" >org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="connection.pool.size" >1</prop>
                <prop key="hibernate.show_sql" >true</prop>
            </props>
        </property>
    </bean>
    
    <bean id="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
  
    <!-- look for transaction annotations -->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
    
    <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10240000"/>
    </bean> 
    
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames" value="classpath:message, classpath:errorMessages" />
    </bean>
        
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource" />
    </bean>
    
    <mvc:interceptors>
        <bean class= "org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language"/>
        </bean>	 	
    </mvc:interceptors>
    <!-- this is the parameter that the interceptor looks for -->
	
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en"/>
    </bean>

</beans>